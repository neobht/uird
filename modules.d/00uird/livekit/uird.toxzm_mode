#!/bin/bash
# Author: Alexander Betkher <http://magos-linux.ru>

# $1 = xzmchanges mount directory
# $2 = changes directory
# $3 = bundles dir
# $4 = union dir
# $5 = toram dir
setup_toxzm_mode() {
	local OPTIONS FS BUNDLE DATA_FROM DATA_FROM_DIR n end a TORAMLIST
	local MODE='' REBUILD='' ADDFILTER='' DROPFILTER='' SQFSOPT='' MAXCOPYSIZE='' EXT=''
	debug_log "setup toxzm_mode" "$*"

	TOXZM_BEGIN=$($GETTEXT "Seting up CHANGES to XZM mode")
	TOXZM_NOTFOUND=$($GETTEXT "File or dir for toxzm mode not found")
	TOXZM_DISABLED=$($GETTEXT "Toxzm  mode disabled!!!")
	TOXZM_PARSING=$($GETTEXT "Parsing")
	TOXZM_WRONG=$($GETTEXT "wrong value - ")
	TOXZM_AGAIN=$($GETTEXT "created, trying to setting up CHANGES to XZM mode again")

	MNT_DIR=$1
	FPARS="/tmp/parameters/$UIRD_MODE/1"
	if [ -f "$FPARS" ]; then
		for str in $(cat $FPARS | sed -n '2,$p'); do
			local | grep -q "$(echo $str | cut -f1 -d=)" && eval $str
		done
	fi
	[ "$EXT" ] || EXT='xzm'
	DMODE='copy'
	[ "$MODE" ] && DMODE="$MODE"
	DREBUILD='yes'
	[ "$REBUILD" ] && DREBUILD="$REBUILD"
	DADDFILTER=''
	[ "$ADDFILTER" ] && DADDFILTER="$(echo $ADDFILTER | sed 's/\+/ /g')"
	DDROPFILTER=''
	[ "$DROPFILTER" ] && DDROPFILTER="$(echo $DROPFILTER | sed 's/\+/ /g')"
	DSQFSOPT=''
	[ "$SQFSOPT" ] && DSQFSOPT="$(echo $SQFSOPT | sed 's/\+/ /g')"
	DMAXCOPYSIZE=''
	[ "$MAXCOPYSIZE" ] && DMAXCOPYSIZE="$MAXCOPYSIZE"
	unset MODE REBUILD ADDFILTER DROPFILTER SQFSOPT MAXCOPYSIZE
	CHANGESVAL=$(getpar $UIRD_CHANGES 1 1)
	[ -z "$CHANGESVAL" ] && CHANGESVAL="/changes.cfg"
	CHANGESVAL="$(echo "$CHANGESVAL" | sed "s/\.${EXT}$/\.cfg/")"
	echo_green_star
	echolog "$TOXZM_BEGIN" $brown"$CHANGESVAL"$default
	DATA_FROM=$(find_data $CHANGESVAL $MNT_DIR "$FPARS")
	add_section() {
		SECTION=$1
		XZMNAME=$2
		echo "# This file is a config for uird.mode=toxzm" >>$CHANGESMNT
		echo "# One section for one module" >>$CHANGESMNT
		echo "# Section numbers must be in order from zero" >>$CHANGESMNT
		echo "# XZM - module name" >>$CHANGESMNT
		echo "# MODE - mode of use (copy, mount, mount+wh)" >>$CHANGESMNT
		echo "# REBULID - rebuild the module (yes, no, once)" >>$CHANGESMNT
		echo "# ADDFILTER - a list of files, dirs to save" >>$CHANGESMNT
		echo "# DROPFILTER - a list of files,dirs to exclude from saves" >>$CHANGESMNT
		echo "# SQFSOPT - additional options for mksquashfs" >>$CHANGESMNT
		echo "# MAXCOPYSIZE - maximum module size in copy mode" >>$CHANGESMNT
		echo "" >>$CHANGESMNT
		echo "XZM${SECTION}=$XZMNAME" >>$CHANGESMNT
		echo "MODE${SECTION}='${DMODE}'" >>$CHANGESMNT
		echo "REBUILD${SECTION}='$DREBUILD'" >>$CHANGESMNT
		echo "ADDFILTER${SECTION}='$DADDFILTER'" >>$CHANGESMNT
		echo "DROPFILTER${SECTION}='$DDROPFILTER'" >>$CHANGESMNT
		echo "SQFSOPT${SECTION}='$DSQFSOPT'" >>$CHANGESMNT
		echo "MAXCOPYSIZE${SECTION}='$DMAXCOPYSIZE'" >>$CHANGESMNT
	}

	if [ -d "$DATA_FROM" ]; then
		MUID=$(get_MUID)
		CHANGESMNT=${DATA_FROM}/${MUID}.cfg
		echo_blue_star
		echolog "Toxzm  config name has not been set, using auto: $CHANGESMNT"
	elif [ -f "$DATA_FROM" ]; then
		CHANGESMNT=$DATA_FROM
	else
		if dirname $CHANGESVAL | grep -E -q "^\.$|^\/$"; then
			echolog "$TOXZM_NOTFOUND"
			echolog "$TOXZM_DISABLED"
			sleep 5
			return
		fi
		DATA_FROM_DIR=$(find_data $(dirname $CHANGESVAL) $MNT_DIR "$FPARS")
		CHANGESMNT="$DATA_FROM_DIR/$(basename $CHANGESVAL)"
	fi
	if [ -f "$CHANGESMNT" ]; then
		echo_blue_star
		echolog "$TOXZM_PARSING $CHANGESMNT"
		source "$CHANGESMNT"
		end=$(($(cat "$CHANGESMNT" | grep -E '^[[:space:]]*XZM[[:digit:]]{,2}=' | wc -l) - 1))
		notenumerated=$(cat "$CHANGESMNT" | grep -E '^[[:space:]]*XZM.*[a-zA-Z]+.*=' | sed -e 's/^[[:space:]]*XZM//' -e 's/=.*$//')
		for n in $(seq 0 $end) $notenumerated; do
			eval XZM=\$XZM$n
			if [ -z "$XZM" ]; then
				XZM="$(get_MUID).$EXT"
				echo_blue_star
				echolog "Module name has not been set, using auto:  $XZM"
			fi
			MODNAME="$(dirname $CHANGESMNT)/$XZM"
			[ -f $MODNAME ] || continue
			eval MODE=\$MODE$n
			eval MAXCOPYSIZE=\$MAXCOPYSIZE$n
			[ -z $MAXCOPYSIZE ] && MAXCOPYSIZE=$(df -m $MEMORY | tail -n1 | awk '{print $4}')
			if [ "$MODE" = "copy" ]; then
				if [ $(du -m $MODNAME | cut -f1) -lt "$MAXCOPYSIZE" ]; then
					echo "${MODNAME}#$MODE" >>/tmp/toxzm_modules
				else
					MODE=mount
					if echo $XZM | grep -q '_20'; then
						NEWNAME=$(echo $XZM | sed "s/_20.*$EXT/_$(date +%F-%H-%M).$EXT/")
					else
						NEWNAME=$(echo $XZM | sed "s/.$EXT/_$(date +%F-%H-%M).$EXT/")
					fi
					echo '' >>"$CHANGESMNT"
					echo '### Section generated by UIRD ###' >>"$CHANGESMNT"
					if expr $n + 1 >/dev/null 2>&1; then
						NEWINDEX=$(($end + 1))
						end=$NEWINDEX
					else
						NEWINDEX=${n}_$RANDOM
					fi
					echo XZM${NEWINDEX}=$NEWNAME >>"$CHANGESMNT"
					for str in MODE REBUILD ADDFILTER DROPFILTER SQFSOPT MAXCOPYSIZE; do
						QUOTES="$(grep "^[[:space:]]*$str$n=.*$" "$CHANGESMNT" | sed -e "s:\":\':g" -e "s/[^\']//g" -e "s:\\\'::g" | wc -m)"
						if [ "$QUOTES" -eq 1 -o $(("$QUOTES" % 2)) -eq 1 ]; then
							grep "^[[:space:]]*$str$n=.*$" "$CHANGESMNT" | sed "s/$str$n=/${str}${NEWINDEX}=/" >>"$CHANGESMNT"
						else
							eval echo "${str}${NEWINDEX}=\'\$$str$n\'" >>"$CHANGESMNT"
						fi
					done
					sed -i "s/MODE$n\=.*/MODE$n\=\'mount\'/" "$CHANGESMNT"
					sed -i "s/REBUILD$n\=.*/REBUILD$n\=\'no\'/" "$CHANGESMNT"
				fi
			fi
			if [ "$MODE" = "mount" -o "$MODE" = "mount+wh" ]; then
				if [ "$(getpar toram)$(getpar $UIRD_COPY2RAM)" ]; then
					TORAMLIST="$TORAMLIST $MODNAME"
					MODNAME="${5}/$(basename $MODNAME)"
				fi
				echo "${MODNAME}#$MODE" >>/tmp/toxzm_modules
			else
				[ "$MODE" = "copy" ] || echolog "$TOXZM_WRONG $MODE"
			fi
			echo MODE$n=$MODE >>/tmp/toxzm.state
		done
		if [ "$TORAMLIST" ]; then
			mkdir -p "$5"
			for a in $TORAMLIST; do
				echolog $yellow"  toram $blue<- $purple$(basename "$a")"$default
				(cp "$a" "${5}/") &
				PIDSS="$PIDSS /proc/$!"
			done
			copy_timer "$5" $PIDSS
		fi
	else
		add_section 0 $(basename $CHANGESMNT | sed "s/.cfg/.$EXT/")
		echo_blue_star
		echolog "$CHANGESMNT $TOXZM_AGAIN"
		setup_toxzm_mode $@
		return
	fi
	echo CHANGESMNT=\"$CHANGESMNT\" >>/tmp/toxzm.state
}
