#!/bin/sh
# Author: Alexander Betkher <http://magos-linux.ru>

uird_shutdown() {
	local  UUID MPOINT MNTOPTS RBIND savesdir savesname savesdev ARR_CFG
	move_run
	# dracut shutdown script fixed for plymouth
	: > "${UNION}/run/initramfs/shutdown.cfg"
	if [ "$(getpar $UIRD_SHUTDOWN 1 1)" ] ; then
	for a in $(getpar $UIRD_SHUTDOWN ) ; do 
		eval $(getpar $UIRD_SHUTDOWN $a 1)=yes
		echo "$(getpar $UIRD_SHUTDOWN $a 1)=yes" >> "${UNION}/run/initramfs/shutdown.cfg"
	done
	fi
	[ -f  /tmp/toxzm.state ] || return
	cat /tmp/toxzm.state >> "${UNION}/run/initramfs/shutdown.cfg"
	. /tmp/toxzm.state
	savesname=$CHANGESMNT
	savesdir=$(dirname $savesname)
	savesdev=$(df $savesdir |grep /dev |awk '{print $1}')
	
	if [ "$(stat -L -c %t $savesdev)" == "fd" ] ; then
	# Find LUKS mount point. It may be /dev/dm-0, or link in /dev/mapper/
		for link in $(ls /dev/mapper/*); do
			if [ "$(realpath $link)" == "$(realpath $savesdev)" ]; then
				LUKSDEV=$(echo $link |sed 's#/mapper##')
				break
			fi
		done
		LUKSUUID=$($BIN_BLKID -s UUID | grep $LUKSDEV | cut -d " " -f 2 | cut -d "\"" -f2)
	fi 
	UUID=$($BIN_BLKID -s UUID | grep ${link:-$savesdev} | cut -d " " -f 2 | cut -d "\"" -f2)
	MPOINT=$(grep $savesdev /proc/self/mountinfo |head -n1 | grep ".* / .*$savesdev" | cut -d " " -f 5 )
	MNTOPTS=$(grep $savesdev /proc/mounts | head -n1 | cut -d " " -f 4)
	RBIND=$(grep $savesdev /proc/self/mountinfo | sed 1d | awk '{print $4 "," $5}')
	echo "#!/bin/ash" > "${UNION}/run/initramfs/remount"
	echo 'BUSYBOX=busybox' >> "${UNION}/run/initramfs/remount"
	echo 'which $BUSYBOX  >/dev/null || BUSYBOX=busybox.static' >> "${UNION}/run/initramfs/remount"
	echo 'BLKID=blkid' >> "${UNION}/run/initramfs/remount"
	echo '[ -x /sbin/blkid.real ] && BLKID=/sbin/blkid.real' >> "${UNION}/run/initramfs/remount"
	echo 'for a in $(ls /dev/sd?) ; do (eject -t "$a" && partprobe "$a") 2>/dev/null ; done' >> "${UNION}/run/initramfs/remount"
################################################################ 
	if [ $LUKSDEV ] ; then
		echo 'DEV=$($BLKID 2>/dev/null | grep -m1 $(echo ' " $LUKSUUID " ' ) | awk -F: '\'{print \$1}\'')' >> "${UNION}/run/initramfs/remount"
		echo 'HARDPASS=$($BUSYBOX lspci |md5sum |cut -f1 -d " ")' >> "${UNION}/run/initramfs/remount"
		echo 'LUKS_DEV=$(echo $DEV |sed "s#/dev/##" )' >> "${UNION}/run/initramfs/remount"
		echo 'echo $HARDPASS | cryptsetup luksOpen "$DEV" --test-passphrase && PASS="$HARDPASS"' >> "${UNION}/run/initramfs/remount"
		echo 'times=3' >> "${UNION}/run/initramfs/remount"
		echo 'while [ $times -gt 0 ]; do' >> "${UNION}/run/initramfs/remount"
    		echo '  [ -b "/dev/mapper/$LUKS_DEV" ] && break ' >> "${UNION}/run/initramfs/remount"
		echo '	if ! [ "$PASS" ] ; then' >> "${UNION}/run/initramfs/remount"
		echo '		echo "$PASSWD_ENTER - $DEV:"' >> "${UNION}/run/initramfs/remount"
		echo '		PASS=$(ask_pass "$PASSWD_ENTER - $DEV")' >> "${UNION}/run/initramfs/remount"
		echo '	fi' >> "${UNION}/run/initramfs/remount"
		echo '	echo "$PASS" | cryptsetup luksOpen "$DEV" "$LUKS_DEV" >/dev/null 2>&1 & ' >> "${UNION}/run/initramfs/remount"
		echo '  cspid=$! ' >> "${UNION}/run/initramfs/remount"
		echo '  echolog "$WAITING_FOR "$DEV" " ' >> "${UNION}/run/initramfs/remount"
		echo '    for a in $(seq 15) ; do ' >> "${UNION}/run/initramfs/remount"
    		echo '       [ -b "/dev/mapper/$LUKS_DEV" ] && break ' >> "${UNION}/run/initramfs/remount"
    		echo '       [ -f "/proc/$cspid/cmdline"  ] || break ' >> "${UNION}/run/initramfs/remount"
    		echo '       sleep 2 ' >> "${UNION}/run/initramfs/remount"
    		echo '       [ $a -ge 13 ] && dmsetup mknodes  "$LUKS_DEV"' >> "${UNION}/run/initramfs/remount"
    		echo '       echo -n . ' >> "${UNION}/run/initramfs/remount"
		echo '    done ' >> "${UNION}/run/initramfs/remount"
		echo '	[ -b "/dev/mapper/$LUKS_DEV" ] && break' >> "${UNION}/run/initramfs/remount"
		echo '	unset PASS' >> "${UNION}/run/initramfs/remount"
		echo '  echo "!" '  >> "${UNION}/run/initramfs/remount"
		echo '	times=$(expr $times - 1 ) ' >> "${UNION}/run/initramfs/remount"
		echo '  [ $times -eq 0 ] && exit 1 ' >> "${UNION}/run/initramfs/remount"
		echo '	echolog "$LUKS_ERROR ($times)"' >> "${UNION}/run/initramfs/remount"
		echo 'done' >> "${UNION}/run/initramfs/remount"
	fi
################################################################
	echo "mkdir -p $MPOINT" >> "${UNION}/run/initramfs/remount"
	echo 'SAVESDEV=$($BLKID 2>/dev/null | grep -m1 $(echo ' " $UUID " ' ) | awk -F: '\'{print \$1}\'')' >> "${UNION}/run/initramfs/remount"
	echo "mount  -o $MNTOPTS  "'$SAVESDEV'"  $MPOINT" >> "${UNION}/run/initramfs/remount"
	for mountstr in $RBIND; do
		mpoint=$(echo $mountstr | cut -d "," -f2 |sed 's:^/sysroot::')
		echo "mkdir -p $mpoint" >> "${UNION}/run/initramfs/remount"
		echo "mount --rbind $MPOINT$(echo $mountstr | cut -d "," -f1)  $mpoint " >> "${UNION}/run/initramfs/remount"
	done
	echo '' >> "${UNION}/run/initramfs/remount" 
	chmod +x "${UNION}/run/initramfs/remount"
}

