#!/bin/sh
uird_shutdown() {
	local UUID MPOINT MNTOPTS RBIND savesdir savesname savesdev ARR_CFG
	move_run
	# dracut shutdown script fixed for plymouth
	: >"${UNION}/run/initramfs/shutdown.cfg"
	if [ "$(getpar $UIRD_SHUTDOWN 1 1)" ]; then
		for a in $(getpar $UIRD_SHUTDOWN); do
			eval $(getpar $UIRD_SHUTDOWN $a 1)=yes
			echo "$(getpar $UIRD_SHUTDOWN $a 1)=yes" >>"${UNION}/run/initramfs/shutdown.cfg"
		done
	fi
	[ -f /tmp/toxzm.state ] || return
	cat /tmp/toxzm.state >>"${UNION}/run/initramfs/shutdown.cfg"
	. /tmp/toxzm.state
	savesname=$CHANGESMNT
	savesdir=$(dirname $savesname)
	savesdev=$(df $savesdir | grep /dev | awk '{print $1}')
	if [ "$(stat -L -c %t $savesdev)" == "fd" ]; then
		# Find LUKS mount point. It may be /dev/dm-0, or link in /dev/mapper/
		for link in $(ls /dev/mapper/*); do
			if [ "$(realpath $link)" == "$(realpath $savesdev)" ]; then
				LUKSDEV=$(echo $link | sed 's#/mapper##')
				break
			fi
		done
		LUKSUUID=$($BIN_BLKID -s UUID | grep $LUKSDEV | cut -d " " -f 2 | cut -d "\"" -f2)
	fi
	UUID=$($BIN_BLKID -s UUID | grep ${link:-$savesdev} | cut -d " " -f 2 | cut -d "\"" -f2)
	MPOINT=$(grep $savesdev /proc/self/mountinfo | head -n1 | grep ".* / .*$savesdev" | cut -d " " -f 5)
	MNTOPTS=$(grep $savesdev /proc/mounts | head -n1 | cut -d " " -f 4)
	RBIND=$(grep $savesdev /proc/self/mountinfo | sed 1d | awk '{print $4 "," $5}')

	cat <<"EOF" >"${UNION}/run/initramfs/remount"
#!/bin/bash
BUSYBOX=busybox
which $BUSYBOX  >/dev/null || BUSYBOX=busybox.static
BLKID=blkid
[ -x /sbin/blkid.real ] && BLKID=/sbin/blkid.real
for a in $(ls /dev/{sd,nvme}? 2>/dev/null) ; do (eject -t "$a" && partprobe "$a") 2>/dev/null ; done
EOF
	################################################################
	if [ $LUKSDEV ]; then
		. /etc/initvars
		eval getpass=\$getpass_$(basename $LUKSDEV)
		typeset -f $getpass >>"${UNION}/run/initramfs/remount"
		echo 'DEV=$($BLKID 2>/dev/null | grep -m1 $(echo ' " $LUKSUUID " ' ) | awk -F: '\'{print \$1}\'')' >>"${UNION}/run/initramfs/remount"
		cat <<"EOF" >>"${UNION}/run/initramfs/remount"
LUKS_DEV=$(basename $DEV)
if command -v getpass_$LUKS_DEV >/dev/null ; then
	echolog "Use: getpass_$LUKS_DEV"
	PASS=$(getpass_$LUKS_DEV $DEV) 
	break
fi 
times=3
while [ $times -gt 0 ]; do
	[ -b "/dev/mapper/$LUKS_DEV" ] && break
	if ! [ "$PASS" ] ; then
		echolog "$PASSWD_ENTER - $DEV"
		PASS=$(ask_pass "$PASSWD_ENTER - $DEV")
	fi
	echo "$PASS" | cryptsetup luksOpen "$DEV" "$LUKS_DEV" >/dev/null 2>&1 &
	cspid=$!
	echolog "${WAITING_FOR} $DEV"
	for a in $(seq 15) ; do
		[ -b "/dev/mapper/$LUKS_DEV" ] && break
		[ -f "/proc/$cspid/cmdline"  ] || break
		sleep 2
		[ $a -ge 13 ] && dmsetup mknodes  "$LUKS_DEV"
		echo -n .
	done
	[ -b "/dev/mapper/$LUKS_DEV" ] && break
	unset PASS
	echo "!"
	times=$(expr $times - 1 )
	[ $times -eq 0 ] && exit 1
	echolog "$LUKS_ERROR ($times)"
done
EOF
	fi
	################################################################
	echo "mkdir -p $MPOINT" >>"${UNION}/run/initramfs/remount"
	echo 'SAVESDEV=$($BLKID 2>/dev/null | grep -m1 $(echo ' " $UUID " ' ) | awk -F: '\'{print \$1}\'')' >>"${UNION}/run/initramfs/remount"
	echo "mount  -o $MNTOPTS  "'$SAVESDEV'"  $MPOINT" >>"${UNION}/run/initramfs/remount"
	for mountstr in $RBIND; do
		mpoint=$(echo $mountstr | cut -d "," -f2 | sed 's:^/sysroot::')
		echo "mkdir -p $mpoint" >>"${UNION}/run/initramfs/remount"
		echo "mount --rbind $MPOINT$(echo $mountstr | cut -d "," -f1)  $mpoint " >>"${UNION}/run/initramfs/remount"
	done
	echo '' >>"${UNION}/run/initramfs/remount"
	chmod +x "${UNION}/run/initramfs/remount"
}
